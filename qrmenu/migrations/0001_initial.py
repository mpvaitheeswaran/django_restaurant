# Generated by Django 2.1.15 on 2022-03-21 11:28

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('currencies', '0006_increase_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccountSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(blank=True, max_length=15)),
                ('menu_layout', models.CharField(blank=True, choices=[('list', 'List Layout'), ('grid', 'Grid Layout'), ('box', 'Box Layout')], default='list', max_length=15, null=True)),
                ('menu_language', models.CharField(blank=True, choices=[('english', 'English'), ('tamil', 'Tamil'), ('sakovia', 'Sakovia')], default='english', max_length=15, null=True)),
                ('currency_model', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='currencies.Currency')),
            ],
        ),
        migrations.CreateModel(
            name='BillingDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, null=True)),
                ('address', models.CharField(max_length=100, null=True)),
                ('gstin', models.CharField(blank=True, max_length=15, null=True)),
                ('city', models.CharField(max_length=30, null=True)),
                ('state', models.CharField(max_length=30, null=True)),
                ('zipcode', models.CharField(max_length=30, null=True)),
                ('country', models.CharField(choices=[('india', 'India'), ('usa', 'United State of America'), ('uae', 'United Arab Emirates'), ('uk', 'United Kingdom'), ('sa', 'Saudi Arabia')], default='india', max_length=30, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomerOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_name', models.CharField(max_length=30, null=True)),
                ('table_no', models.IntegerField(null=True)),
                ('total_price', models.FloatField(blank=True, null=True)),
                ('success', models.BooleanField(blank=True, default=False, null=True)),
                ('status', models.CharField(default='pending', max_length=15, null=True)),
                ('timestamp', models.DateTimeField(default=datetime.datetime(2022, 3, 21, 16, 58, 9, 280800))),
                ('order_type', models.CharField(choices=[('dinein', 'Dinein'), ('delivery', 'Delivery'), ('pickup', 'Pickup')], default='dinein', max_length=15)),
            ],
            options={
                'ordering': ['status', '-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Enquiry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, null=True)),
                ('question', models.TextField(max_length=500)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('initiated', 'Initiated'), ('pending', 'Pending'), ('resolved', 'Resolved')], default='initiated', max_length=20)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='MenuCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, null=True)),
                ('order', models.IntegerField(null=True)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, null=True)),
                ('price', models.FloatField(null=True)),
                ('desc', models.TextField(null=True)),
                ('food_type', models.BooleanField(default=True, null=True)),
                ('img', models.ImageField(default='item_imgs/default.png', upload_to='item_imgs')),
                ('display', models.BooleanField(default=True, null=True)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='qrmenu.MenuCategory')),
            ],
        ),
        migrations.CreateModel(
            name='OrderedMenu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(null=True)),
                ('menu', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='qrmenu.MenuItem')),
            ],
        ),
        migrations.CreateModel(
            name='Pack',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_menus', models.PositiveIntegerField(blank=True, default=0)),
                ('total_scans', models.PositiveIntegerField(blank=True, default=0)),
                ('pack_type', models.IntegerField(blank=True, default=-1)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RestaurantDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_id', models.CharField(blank=True, editable=False, max_length=15, null=True, unique=True)),
                ('name', models.CharField(max_length=100, null=True)),
                ('gstin', models.CharField(blank=True, max_length=15, null=True)),
                ('desc', models.TextField(null=True)),
                ('location', models.CharField(max_length=100, null=True)),
                ('image', models.ImageField(default='default/default.png', null=True, upload_to='restaurant_image')),
                ('logo', models.ImageField(default='default/default.png', null=True, upload_to='restaurant_logo')),
                ('menu_count', models.IntegerField(default=0, null=True)),
                ('allowCalltoWaiter', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=True)),
                ('allowCustomerOrder', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=False)),
                ('pickup', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=False)),
                ('total_tables', models.PositiveIntegerField(default=5, null=True)),
                ('invoice_pdf', models.FileField(blank=True, null=True, upload_to='invoice_pdfs')),
                ('is_free_pack_used', models.BooleanField(blank=True, default=False)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ScanCount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(max_length=20, unique=True)),
                ('restaurant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='qrmenu.RestaurantDetail')),
            ],
        ),
        migrations.AddField(
            model_name='pack',
            name='restaurant',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='qrmenu.RestaurantDetail'),
        ),
        migrations.AddField(
            model_name='menucategory',
            name='restaurant',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='qrmenu.RestaurantDetail'),
        ),
        migrations.AddField(
            model_name='enquiry',
            name='restaurant',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='qrmenu.RestaurantDetail'),
        ),
        migrations.AddField(
            model_name='customerorder',
            name='ordered_menu',
            field=models.ManyToManyField(to='qrmenu.OrderedMenu'),
        ),
        migrations.AddField(
            model_name='customerorder',
            name='restaurant',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='qrmenu.RestaurantDetail'),
        ),
        migrations.AddField(
            model_name='billingdetail',
            name='restaurant',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='qrmenu.RestaurantDetail'),
        ),
        migrations.AddField(
            model_name='accountsetting',
            name='restaurant',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='qrmenu.RestaurantDetail'),
        ),
    ]
